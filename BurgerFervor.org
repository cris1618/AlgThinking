#+TITLE: Burger Fervor
#+AUTHOR: Cristian Del Gobbo (pledged)
#+SUBTITLE: Problem taken from the book "Algorithmic Thinking" by Daniel Zingaro
#+STARTUP: overview hideblocks indent
#+PROPERTY: header-args:C :main yes :includes <stdio.h> :results output

* Try a Recursive Approach
#+begin_src C
  int max(int v1, int v2){
    if(v1 > v2){
      return v1;
    }else{
      return v2;
    }
  
  // Create helper function to solve for the numbers of minutes
  int solve_t(int m, int n, int t){
    if(t==0){
      return 0;
    }
    int first; 
    if(t>=m){
      first = solve_t(m, n, t-m);
    }else{
      first = -1;
    }
    int second;
    if(t>=n){
      second = solve_t(m, n, t-n);
    }else{
      second = -1;
    }
    if(first == -1 && second == -1){
      return -1;
    }else{
      return max(first, second) + 1;
    }
  }

  // General function to solve for t-1, t-2 and so on
  void solve(int m, int n, int t){
    int result, i;
    result = solve_t(m,n,t);
    if(result>=0){
      printf("%d\n", result);
    }else{
      i = t-1;
      result = solve_t(m, n, i);
      while(result == -1){
        i--;
        result = solve_t(m, n, i);
      }
    }
    printf("%d %d\n", result, t-i);
  }

  }

#+end_src

#+RESULTS:
